import pygame
import time
import random
from game_classes import *
import threading

def seliction(screen, size):
    y_square = screen.get_height() - size - 100
    x_squere1 = 0
    x_squere2 = 100
    x_squere3 = 200
    squere_size = 50
    font = pygame.font.Font(None, 30)
    text1 = font.render("DMG", 1, (255, 255, 255))
    screen.blit(text1, (0, y_square - 50))
    pygame.draw.rect(screen, (00,00,255), (x_squere1, y_square,squere_size, squere_size))
    text2 = font.render("ARC", 1, (255, 255, 255))
    screen.blit(text2, (100, y_square - 50))
    pygame.draw.rect(screen, (00,142,150), (x_squere2, y_square,squere_size, squere_size))
    text2 = font.render("TNK", 1, (255, 255, 255))
    screen.blit(text2, (200, y_square - 50))
    pygame.draw.rect(screen, (150,00,255), (x_squere3, y_square,squere_size, squere_size))

    

def select(screen, size, mouse_pos):
    y_square = screen.get_height() - size - 100
    x_squere1 = 0
    x_squere2 = 100
    x_squere3 = 200
    squere_size = 50
    mouse_x, mouse_y = mouse_pos
    if (mouse_x >= x_squere1 and mouse_x <= x_squere1 + squere_size and mouse_y >= y_square and mouse_y <= y_square + squere_size):
            return "attacker"
    elif (mouse_x >= x_squere2 and mouse_x <= x_squere2 + squere_size and mouse_y >= y_square and mouse_y <= y_square + squere_size):
            return "archer"
    elif (mouse_x >= x_squere3 and mouse_x <= x_squere3 + squere_size and mouse_y >= y_square and mouse_y <= y_square + squere_size):
            return "tank"
    else:
        return "none"
    

    


def main():
   

    pygame.init()
    screen = pygame.display.set_mode()
    player_tower1 = Tower("left", 300, screen)
    player_tower2 = Tower("right", 300, screen)
    
    running = True
    left_mouse_button_pressed = False
    mouse_pos = (0, 0)
    troops = []
    threads = []
    i = 0
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
            if event.type == pygame.MOUSEBUTTONDOWN:
                i += 1
                mouse_pos = pygame.mouse.get_pos()
                choise = select(screen, player_tower1.size, mouse_pos)
                troops.append(Troops(choise, screen))
                threads.append(threading.Thread(target=troops[-1].troop_move))
                print(choise)
        seliction(screen, player_tower1.size) 
        player_tower1.draw_tower_ev_hp()
        player_tower2.draw_tower_ev_hp()
        if i >= 1:
            for x in range(i):
                if not threads[x].is_alive():
                    threads[x] = threading.Thread(target=troops[x].troop_move)
                    threads[x].start()
                if i >= 2:
                    for y in range(1, i):
                        if x != y:  
                            if troops[y].bump(troops[y - 1]):
                                pass
                            

        pygame.display.flip()  # Update the screen

    pygame.quit()



if __name__ == "__main__":
    main()
